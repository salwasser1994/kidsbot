import os
import re
import logging
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters

BOT_TOKEN = os.environ.get("BOT_TOKEN") or "7174011610:AAGGjDniBS_D1HE_aGSxPA9M6mrGCZOeqNM"

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def get_oldest_tiktok_video(profile_url: str) -> str:
    """–ù–∞—Ö–æ–¥–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ –≤–∏–¥–µ–æ TikTok-–∞–∫–∫–∞—É–Ω—Ç–∞."""
    match = re.search(r"tiktok\\.com/@([A-Za-z0-9._]+)", profile_url)
    if not match:
        raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ TikTok-–∞–∫–∫–∞—É–Ω—Ç.")
    username = match.group(1)

    headers = {"User-Agent": "Mozilla/5.0"}
    url = f"https://www.tiktok.com/@{username}"
    logger.info(f"Fetching TikTok profile for @{username}")
    response = requests.get(url, headers=headers, timeout=10)
    response.raise_for_status()

    video_ids = re.findall(r'/video/(\\d+)', response.text)
    if not video_ids:
        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ (—Å—Ç–∞—Ä–µ–π—à–µ–µ)
    video_ids = list(dict.fromkeys(video_ids))
    oldest_id = video_ids[-1]
    return f"https://www.tiktok.com/@{username}/video/{oldest_id}"

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    text = update.message.text.strip()

    if "tiktok.com" not in text:
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok-–∞–∫–∫–∞—É–Ω—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
            "https://www.tiktok.com/@username\n\n"
            "–Ø –ø—Ä–∏—à–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ –≤–∏–¥–µ–æ —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ üîó"
        )
        return

    try:
        video_url = get_oldest_tiktok_video(text)
        await update.message.reply_text(f"üìπ –°–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ –≤–∏–¥–µ–æ:\n{video_url}")
    except Exception as e:
        logger.exception(e)
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

async def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("Bot started.")
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
